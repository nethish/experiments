syntax = "proto3";

package api;

option go_package = "./api;api";

// A basic user message
message User {
  string id = 1;
  string name = 2;
  string email = 3;
}

// Request for listing users
message ListUsersRequest { string filter = 1; }

message GetUserRequest { int64 id = 1; }

message GetUserResponse {}

// Request to create a user
message CreateUserRequest {
  string name = 1;
  string email = 2;
}

// Response after creating users
message CreateUsersResponse { int32 count = 1; }

// Request or response for user chat
message UserChatMessage {
  string user_id = 1;
  string message = 2;
  int64 timestamp = 3;
}

service UserService {
  rpc GetUser(GetUserRequest) returns (GetUserResponse);

  // Server streaming: send a request, receive a stream of users
  rpc ListUsers(ListUsersRequest) returns (stream User);

  // Client streaming: send a stream of users, get a summary response
  rpc CreateUsers(stream CreateUserRequest) returns (CreateUsersResponse);

  // Bidirectional streaming: both sides send messages
  rpc ChatWithUsers(stream UserChatMessage) returns (stream UserChatMessage);
}
